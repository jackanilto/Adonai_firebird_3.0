unit UCadMembroS;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, System.ImageList, Vcl.ImgList,
  Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtDlgs, Vcl.ExtCtrls, Data.DB,
  Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.AppEvnts, Vcl.Imaging.jpeg, frxDesgn,
  frxClass, frxExportBaseDialog, frxExportPDF, Vcl.DBCtrls, JvExMask,
  JvToolEdit, JvDBControls, Vcl.Imaging.pngimage, JvExStdCtrls, JvCombobox,
  JvDBCombobox;

type
  TFrmCadMembroS = class(TForm)
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    Label1: TLabel;
    grid: TDBGrid;
    imgProfile: TImage;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Estado: TLabel;
    Label8: TLabel;
    LabelCOMPLENENTO: TLabel;
    Label7: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Email: TLabel;
    Label11: TLabel;
    EstaCivil: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Escolaridade: TLabel;
    Label14: TLabel;
    CPF: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Naturalidade: TLabel;
    Label19: TLabel;
    DataCasCONJUGE: TLabel;
    Label20: TLabel;
    DIZIMISTA: TLabel;
    Tratamento: TLabel;
    Grupo: TLabel;
    Ministerio: TLabel;
    Label22: TLabel;
    dataBatismo: TLabel;
    Label23: TLabel;
    DataCONSAGRAÇAO: TLabel;
    Label24: TLabel;
    Label25: TLabel;
    CidadeBatismo: TLabel;
    OBS: TLabel;
    Label26: TLabel;
    ValCarteira: TLabel;
    ROLL: TLabel;
    Label27: TLabel;
    Label28: TLabel;
    CheckATIVO: TCheckBox;
    Label29: TLabel;
    Label30: TLabel;
    Label31: TLabel;
    btnFOTOGRAFAR: TSpeedButton;
    btnAdd: TSpeedButton;
    dialog: TOpenDialog;
    Label32: TLabel;
    DBEditROLL: TDBEdit;
    DBEditNOME: TDBEdit;
    DBEditENDERECO: TDBEdit;
    DBEditNUMERO: TDBEdit;
    Label34: TLabel;
    DBEdit1: TDBEdit;
    Label35: TLabel;
    DBEdit2: TDBEdit;
    DBEditBAIRRO: TDBEdit;
    DBEditCIDADE: TDBEdit;
    DBEditESTADO: TDBEdit;
    DBEDITCEP: TDBEdit;
    DBEditCOMPLEMENTO: TDBEdit;
    DBEditTELPESSOAL: TDBEdit;
    DBEditCONTATO1: TDBEdit;
    DBEditCONTATO2: TDBEdit;
    DBEditEMAIL: TDBEdit;
    DBcbSEXO: TDBComboBox;
    DBcbESTCIVIL: TDBComboBox;
    DBDateCASAMENTO: TJvDBDateEdit;
    DBEditCONJUGE: TDBEdit;
    DBDateNASCCONJUGE: TJvDBDateEdit;
    DBcbESCOLARIDADE: TDBComboBox;
    DBcbPROFISSAO: TDBComboBox;
    DBEDITRG: TDBEdit;
    DBEDITCPF: TDBEdit;
    DBEditTITULO: TDBEdit;
    DBEditMAE: TDBEdit;
    DBEditPAI: TDBEdit;
    DBEdit18: TDBEdit;
    DBEditNATURAL: TDBEdit;
    DBEditFILHOS: TDBEdit;
    DBDateNASC: TJvDBDateEdit;
    DBcbMORADIA: TDBComboBox;
    DBcbBATIZADO: TDBComboBox;
    DBcbDIZIMISTA: TDBComboBox;
    DBDateADMISSAO: TJvDBDateEdit;
    DBDateCONSAGRA: TJvDBDateEdit;
    DBEditIGREJA_BATISMO: TDBEdit;
    DBDateBATISMO: TJvDBDateEdit;
    DBEditCIDADEBATISMO: TDBEdit;
    DBEditPAISORIG: TDBEdit;
    DBEditTELPAISORIG: TDBEdit;
    DBEditCAMPO13: TDBEdit;
    DBEditCAMPO15: TDBEdit;
    DBMemoOBSERVACAO: TDBMemo;
    DBMemoHistórico: TDBMemo;
    DBDateVALCARTEIRA: TJvDBDateEdit;
    EditPATHFOTO: TDBEdit;
    Label21: TLabel;
    DBeditid: TDBEdit;
    EditID: TEdit;
    PanelBusca: TPanel;
    Label33: TLabel;
    Image1: TImage;
    edtBuscar: TEdit;
    DBcbTRATAMENTO: TComboBox;
    DBcbGRUPO: TComboBox;
    DBcbMINISTERIO: TComboBox;
    IMGPAGECONTROL: TImageList;
    PanelMenu: TPanel;
    BtnNovo: TBitBtn;
    BtnSalvar: TBitBtn;
    BtnDeletar: TBitBtn;
    BtnEditar: TBitBtn;
    BtnCancelar: TBitBtn;
    BtnAtualizar: TBitBtn;
    BtnPesquisar: TBitBtn;
    BtnSair: TBitBtn;
    DBLookupComboBox1: TDBLookupComboBox;
    DBComboBoxtrata: TDBComboBox;
   // EditVALOR: TEdit;
    procedure btnNovoClick(Sender: TObject);
    procedure BtnSalvarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure gridCellClick(Column: TColumn);
    procedure btnDeletarClick(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure edtBuscarChange(Sender: TObject);
   // procedure EditVALORKeyPress(Sender: TObject; var Key: Char);
   // procedure EditVALORChange(Sender: TObject);
    procedure btnFOTOGRAFARClick(Sender: TObject);
    procedure btnAddClick(Sender: TObject);
    procedure btnCartasClick(Sender: TObject);
    procedure gridDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);

    function ApplicationPath: String;
    Function PathWithDelim( const APath : String ) : String ;
    function RightStr(const AText: AnsiString; const ACount: Integer): AnsiString;

    procedure BtnGravarClick(Sender: TObject);
    procedure btnCANCELARClick(Sender: TObject);
    procedure BtnAtualizarClick(Sender: TObject);
    procedure BtnSairClick(Sender: TObject);
//    procedure btnCANCELARClick(Sender: TObject);

  private
    { Private declarations }
  public
   { Public declarations }
   procedure limparCampos();
   procedure habilitarCampos();
   procedure desabilitarCampos();
   procedure buscarTudo();
   procedure buscarNome();
   procedure associarCampos();
   procedure carregarcbPROFISSAO();
   PROCEDURE CARREGARTRATAMENTO();
   PROCEDURE CARREGARIGREJAS();
   PROCEDURE CARREGARGRUPOS();
//   procedure carregarComboboxFuncoes();
   procedure carregarImagemPadrao();
//   procedure carregarComboboxIgrejas();
  end;

var
  FrmCadMembroS: TFrmCadMembroS;
  caminhoImg: string;
  imgPessoa: TPicture;
  alterou: boolean;
// VAR PARA PROCEDURE FORMATA MOEDAS
   s : string;
   v : double;
   I : integer;


implementation

{$R *.dfm}

uses UDM, uWebCam;

procedure TFrmCadMembroS.associarCampos;
begin
   DM.TBL_MEMBROS.FieldByName('NOME')                 .AsString       := DBEditNOME.Text;
   DM.TBL_MEMBROS.FieldByName('ENDERECO')             .AsString       := DBEditENDERECO.Text;
   DM.TBL_MEMBROS.FieldByName('NUMERO')               .AsString       := DBEditNUMERO.Text;
   DM.TBL_MEMBROS.FieldByName('BAIRRO')               .AsString       := DBEditBAIRRO.Text;
   DM.TBL_MEMBROS.FieldByName('CIDADE')               .AsString       := DBEditCIDADE.Text;
   DM.TBL_MEMBROS.FieldByName('ESTADO')               .AsString       := DBEditESTADO.Text;
   DM.TBL_MEMBROS.FieldByName('CEP')                  .Value          := DBEDITCEP.Text;
   DM.TBL_MEMBROS.FieldByName('COMPLEMENTO')          .AsString       := DBEditCOMPLEMENTO.Text;
   DM.TBL_MEMBROS.FieldByName('TELPESSOAL')           .Value          := DBEditTELPESSOAL.Text;
   DM.TBL_MEMBROS.FieldByName('CONTATO1')             .Value          := DBEditCONTATO1.Text;
   DM.TBL_MEMBROS.FieldByName('CONTATO2')             .Value          := DBEditCONTATO2.Text;
   DM.TBL_MEMBROS.FieldByName('EMAIL')                .AsString       := DBEditEMAIL                .Text;
   DM.TBL_MEMBROS.FieldByName('DIZIMISTA')            .AsString       := DBcbDIZIMISTA              .Text;
   DM.TBL_MEMBROS.FieldByName('GRUPO')                .AsString       := DBcbGRUPO                  .Text;
   DM.TBL_MEMBROS.FieldByName('TRATAMENTO')           .AsString       := DBcbTRATAMENTO.Text;
   DM.TBL_MEMBROS.FieldByName('OBSERVACAO')           .AsString       := DBMemoOBSERVACAO.Text;
   DM.TBL_MEMBROS.FieldByName('SEXO')                 .AsString       := DBcbSEXO.Text;
   DM.TBL_MEMBROS.FieldByName('ESTADO_CIVIL')         .AsString       := DBcbESTCIVIL               .Text;
   DM.TBL_MEMBROS.FieldByName('MINISTERIO')           .AsString       := DBcbMINISTERIO             .Text;
   DM.TBL_MEMBROS.FieldByName('GRAU_ESCOLARIDADE')    .AsString       := DBcbESCOLARIDADE           .Text;
   DM.TBL_MEMBROS.FieldByName('BATIZADO')             .AsString       := DBcbBATIZADO               .Text;
   DM.TBL_MEMBROS.FieldByName('RG')                   .Value          := DBEDITRG                   .Text;
   DM.TBL_MEMBROS.FieldByName('CPF')                  .Value          := DBEDITCPF                  .Text;
   DM.TBL_MEMBROS.FieldByName('NOME_PAI')             .AsString       := DBEditPAI                  .Text;
   DM.TBL_MEMBROS.FieldByName('NOME_MAE')             .AsString       := DBEditMAE                  .Text;
   DM.TBL_MEMBROS.FieldByName('DateBATISMO')          .Value          := DBDateBATISMO.Date;
   DM.TBL_MEMBROS.FieldByName('DATEADMISSAO')         .Value          := DBDateADMISSAO             .Date;
   DM.TBL_MEMBROS.FieldByName('PAIS_ORIGEM')          .AsString       := DBEditPAISORIG             .Text;
   DM.TBL_MEMBROS.FieldByName('TELEFONE_PAIS_ORIGEM') .Value          := DBEditTELPAISORIG          .Text;
   DM.TBL_MEMBROS.FieldByName('DateCASAMENTO')        .Value          := DBDateCASAMENTO.Date;
   DM.TBL_MEMBROS.FieldByName('IGREJA_BATISMO')       .AsString       := DBEditIGREJA_BATISMO       .Text;
   DM.TBL_MEMBROS.FieldByName('DATECONSAGRA')         .Value          := DBDateCONSAGRA.Date;
   DM.TBL_MEMBROS.FieldByName('NATURALIDADE')         .AsString       := DBEditNATURAL              .Text;
   DM.TBL_MEMBROS.FieldByName('TITULO_ELEITOR')       .Value          := DBEditTITULO               .Text;
   DM.TBL_MEMBROS.FieldByName('FILHOS')               .AsString       := DBEditFILHOS               .Text;
   DM.TBL_MEMBROS.FieldByName('DateVALCARTEIRA')      .Value          := DBDateVALCARTEIRA.Date;
   DM.TBL_MEMBROS.FieldByName('ROLL')                 .Value          := DBEditROLL                 .Text;
   DM.TBL_MEMBROS.FieldByName('CONJUGE')              .AsString       := DBEditCONJUGE              .Text;
   DM.TBL_MEMBROS.FieldByName('CAMPO13')              .AsString       := DBEditCAMPO13              .Text;
   DM.TBL_MEMBROS.FieldByName('TIPO_MORADIA')         .AsString       := DBcbMORADIA              .Text;
   DM.TBL_MEMBROS.FieldByName('CAMPO15')              .AsString       := DBEditCAMPO15              .Text;
   DM.TBL_MEMBROS.FieldByName('HISTORICO')            .AsString       := DBMemoHistórico            .Text;
   DM.TBL_MEMBROS.FieldByName('PROFISSAO')            .AsString       := DBcbPROFISSAO              .Text;
   DM.TBL_MEMBROS.FieldByName('DateNASCCONJUGE')      .Value          := DBDateNASCCONJUGE.Date;
   DM.TBL_MEMBROS.FieldByName('CIDADE_BATISMO')       .AsString       := DBEditCIDADEBATISMO        .Text;
   DM.TBL_MEMBROS.FieldByName('DATA_NASC')            .Value          := DBDateNASC.Date;
   DM.TBL_MEMBROS.FieldByName('IMAGEM')               .AsString       := editpathfoto.text;

end;


procedure TFrmCadMembroS.btnCANCELARClick(Sender: TObject);
begin

   DM.QueryMembro.Cancel;
   Messagedlg('Ação cancelada',
   mtInformation, [mbOK],0);

   DM.QueryMembro.Close;
   DM.QueryMembro.Open;

   //buscarTudo;
   limparCampos;
  // carregarImagemPadrao();
   BtnSalvar.Enabled     := False;
   btnNovo.Enabled       := True;
   btnDeletar.Enabled    := False;
   btnEditar.Enabled     := True;
   btnCANCELAR.Enabled   := False;
   BtnPesquisar.Enabled  := True;
   btnAdd.Enabled        := False;
   btnFOTOGRAFAR.Enabled := False;
end;

procedure TFrmCadMembroS.btnAddClick(Sender: TObject);
var path: string;
dirfotos: string;
begin
   dirfotos:=ApplicationPath+'Fotos';

  if directoryexists(dirfotos) = false then
  forcedirectories(dirfotos);

  if dialog.Execute then
  begin
    EditPATHFOTO.TEXT:= dirfotos+'\'+ExtractFileName(Dialog.FileName);
    imgProfile.picture.loadfromfile(Dialog.FileName);
    imgProfile.visible := true;
    imgProfile.picture.SaveToFile(EDITPATHFOTO.TEXT);
  end;
end;

procedure TFrmCadMembroS.BtnAtualizarClick(Sender: TObject);
begin

    DM.QueryMembro.Refresh;  // colca a QUERY em modo Post
    Messagedlg('Registro atualizado com sucesso!',
    mtInformation, [mbOK],0);

    LimparCampos;

end;

procedure TFrmCadMembroS.btnDeletarClick(Sender: TObject);
  var
    CaminhoImagem: string;
begin
    BtnSalvar.Enabled := False;
    btnNovo.Enabled := False;
    btnDeletar.Enabled := False;
    btnEditar.Enabled := False;
    btnCANCELAR.Enabled := True;
    BtnPesquisar.Enabled := False;
    btnAdd.Enabled := False;
    btnFOTOGRAFAR.Enabled := False;
  if MessageDlg('Deseja deletar este registro?', MtConfirmation, [mbOK, MbNo],0)=mrOk then
  begin
    // Obtém o caminho da imagem do EditPATHFOTO
    CaminhoImagem := EditPATHFOTO.Text;
    DM.QueryMembro.Delete;  // colca a QUERY em modo edit

    // Exclui a imagem associada se o caminho não estiver vazio
    if not Trim(CaminhoImagem).IsEmpty then
    begin
      try
        DeleteFile(CaminhoImagem);
        carregarImagemPadrao();
      except
        on E: Exception do
          ShowMessage('Erro ao excluir a imagem: ' + E.Message);
      end;
    end;
   // buscarTudo;
    limparCampos;

    BtnSalvar.Enabled     := False;
    btnNovo.Enabled       := True;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := True;
    btnCANCELAR.Enabled   := False;
    BtnPesquisar.Enabled  := True;
    btnAdd.Enabled        := False;
    btnFOTOGRAFAR.Enabled := False;
  end
  else
    BtnSalvar.Enabled     := False;
    btnNovo.Enabled       := True;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := True;
    btnCANCELAR.Enabled   := False;
    BtnPesquisar.Enabled  := True;
    btnAdd.Enabled        := False;
    btnFOTOGRAFAR.Enabled := False;


   // buscarTudo;
    limparCampos;
    // caso o usuario clicar em NÂO
  abort;

   // buscarTudo;
    limparCampos;

    BtnSalvar.Enabled     := False;
    btnNovo.Enabled       := True;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := True;
    btnCANCELAR.Enabled   := False;
    BtnPesquisar.Enabled  := True;
    btnAdd.Enabled        := False;
    btnFOTOGRAFAR.Enabled := False;

end;

procedure TFrmCadMembroS.btnEditarClick(Sender: TObject);
begin
    BtnSalvar.Enabled     := True;
    btnNovo.Enabled       := False;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := False;
    btnCANCELAR.Enabled   := True;
    btnAdd.Enabled        := True;
    btnFOTOGRAFAR.Enabled := True;

if MessageDlg('Deseja alterar este registro?', MtConfirmation, [mbOK, MbNo],0)=mrOk then
  begin
    DM.QueryMembro.Edit;  // colca a QUERY em modo edit
  end
  else
    BtnSalvar.Enabled     := True;
    btnNovo.Enabled       := False;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := False;
    btnCANCELAR.Enabled   := True;
    btnAdd.Enabled        := True;
    btnFOTOGRAFAR.Enabled := True;
    // caso o usuario clicar em NÂO
  abort;

    BtnSalvar.Enabled     := True;
    btnNovo.Enabled       := True;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := True;
    btnCANCELAR.Enabled   := True;
    BtnPesquisar.Enabled  := True;
    btnAdd.Enabled        := true;
    btnFOTOGRAFAR.Enabled := True;

end;

procedure TFrmCadMembroS.btnNovoClick(Sender: TObject);
   var prox:Integer;
begin
    DM.QueryMembro.Open;     //Abre
    DM.QueryMembro.Last;     //Move para o Ultimo
    prox:=DM.QueryMembroID.AsInteger + 1;   //  Recebe o ultimo ID e Add +1
    DM.QueryMembro.Append; //  Insere uma linha nova no final da tabela.
    DM.QueryMembroID.AsInteger:=prox;  //Faz o AutoIncremento na tabela
    DBEditNOME.SetFocus;   // Coloca o Foco ( Cursor ) no Edit Usuario


    limparCampos();
    carregarImagemPadrao();
    BtnSalvar.Enabled     := True;
    btnNovo.Enabled       := False;
    btnDeletar.Enabled    := false;
    btnEditar.Enabled     := False;
    btnCANCELAR.Enabled   := True;
    BtnPesquisar.Enabled  := False;
    btnAdd.Enabled        := True;
    btnFOTOGRAFAR.Enabled := True;

end;

procedure TFrmCadMembroS.BtnSairClick(Sender: TObject);
  begin
    if Application.MessageBox('Deseja fechar o formulario Cadastro?','Confirmação',
    mb_YesNo + MB_ICONQUESTION)=Id_Yes then
    begin
      FrmCadMembroS.Close;

      DM.QueryMembro.Close;
      DM.QueryMembro.Open;
    end
      else
      Abort;
  end;

procedure TFrmCadMembroS.BtnSalvarClick(Sender: TObject);
begin
  if (DBEditNOME.Text <> '') then
  begin
    associarCampos;
    DM.TBL_MEMBROS.Post;
    MessageDlg('Salvo com Sucesso!!', mtInformation, mbOKCancel, 0);


  //  buscarTudo;
    desabilitarCampos;

    BtnSalvar.Enabled     := False;
    btnNovo.Enabled       := True;
    btnDeletar.Enabled    := True;
    btnEditar.Enabled     := False;
    btnCANCELAR.Enabled   := True;
    BtnPesquisar.Enabled  := False;
    btnAdd.Enabled        := True;
    btnFOTOGRAFAR.Enabled := True;
    grid.Enabled       := True;
    end
    else
    begin
    MessageDlg('Preencha os Campos', mtInformation, mbOKCancel, 0);
  end;
end;

procedure TFrmCadMembroS.btnFOTOGRAFARClick(Sender: TObject);
var path: string;
  dirfotos: string;
begin
frmWebCam := TfrmWebCam.Create(Application);
  with frmWebCam do
  begin
    ShowModal;
    if ModalResult = mrOk then
      imgProfile.Picture.Assign(imgSnapshot.Picture);
      begin
        alterou := true;

        dirfotos:=ApplicationPath+'Fotos';

        if directoryexists(dirfotos) = false then
        forcedirectories(dirfotos);

        EditPATHFOTO.TEXT:= dirfotos+'\'+DBeditid.text+'.bmp';
        imgProfile.visible := true;
        imgProfile.picture.SaveToFile(EDITPATHFOTO.TEXT);
      end;
  end;
end;

procedure TFrmCadMembroS.BtnGravarClick(Sender: TObject);

begin
    if DBEditNOME.Text = '' then
    begin
        ShowMessage('O campo NOME não pode ser vazio.');
    end
  else
    begin
        DM.QueryMembro.Edit;
        DM.QueryMembroIMAGEM.Value := EditPATHFOTO.Text;

        DM.QueryMembro.Post;  // colca a QUERY em modo Post
        Messagedlg('Registro salvo com sucesso!',
        mtInformation, [mbOK],0);
        //LimparCampos;

        BtnSalvar.Enabled     := False;
        btnNovo.Enabled       := True;
        btnDeletar.Enabled    := False;
        btnEditar.Enabled     := True;
        btnCANCELAR.Enabled   := False;
        BtnPesquisar.Enabled  := True;
        btnAdd.Enabled        := False;
        btnFOTOGRAFAR.Enabled := False;

    end;
end;

procedure TFrmCadMembroS.buscarNome;
begin
  dm.QueryMembro.Close;
  dm.QueryMembro.SQL.Clear;                                 //add collate win_ptbr para busca CASE INSESITIVE
  dm.QueryMembro.SQL.Add('select * from TBL_MEMBROS where nome collate win_ptbr LIKE :nome order by nome asc');
  dm.QueryMembro.ParamByName('NOME').Value := '%' + edtBuscar.Text + '%';
  dm.QueryMembro.Open;
end;

procedure TFrmCadMembroS.buscarTudo;
begin
  DM.QueryMembro.Close;
  DM.QueryMembro.SQL.Clear;
  DM.QueryMembro.SQL.Add('select * from TBL_MEMBROS order by ID asc');
  DM.QueryMembro.Open();
end;

procedure TFrmCadMembroS.carregarcbPROFISSAO;
begin
if not DM.TBL_PROFISSOES.IsEmpty then
  begin

    while not DM.TBL_PROFISSOES.Eof do
    begin

       DBcbPROFISSAO.Items.Add(DM.TBL_PROFISSOES.FieldByName('PROFISSAO').AsString);
       DM.TBL_PROFISSOES.next;
    end;
  end;
end;

procedure TFrmCadMembroS.CARREGARGRUPOS;
begin
if not DM.TBL_GRUPOS.IsEmpty then
  begin

    while not DM.TBL_GRUPOS.Eof do
    begin

       DBcbGRUPO.Items.Add(DM.TBL_GRUPOS.FieldByName('NOME_GRUPO').AsString);
       DM.TBL_GRUPOS.next;
    end;
  end;
end;

procedure TFrmCadMembroS.CARREGARIGREJAS;
begin
if not DM.TBL_IGREJAS.IsEmpty then
  begin

    while not DM.TBL_IGREJAS.Eof do
    begin

       DBcbMINISTERIO.Items.Add(DM.TBL_IGREJAS.FieldByName('NOME_IGREJA').AsString);
       DM.TBL_IGREJAS.next;
    end;
  end;
end;

procedure TFrmCadMembroS.carregarImagemPadrao;
begin
    caminhoImg  := GetCurrentDir + '\Fotos\sem-foto.png';
    imgProfile.Picture.LoadFromFile(caminhoImg);
end;

procedure TFrmCadMembroS.CARREGARTRATAMENTO;
begin
if not DM.TBL_TRATAMENTOS.IsEmpty then
  begin

    while not DM.TBL_TRATAMENTOS.Eof do
    begin

       DBComboBoxtrata.Items.Add(DM.TBL_TRATAMENTOS.FieldByName('TRATAMENTO').AsString);
       DM.TBL_TRATAMENTOS.next;
    end;
  end;
end;

procedure TFrmCadMembroS.desabilitarCampos;
begin
limparcampos();
DBEditNOME.Enabled := false;

end;

procedure TFrmCadMembroS.edtBuscarChange(Sender: TObject);
begin
buscarNome;
end;

procedure TFrmCadMembroS.FormShow(Sender: TObject);
  begin
    // Traz a data atual no componente DatePicker
    DBDateNASC.Date := Date;
    DBDateCASAMENTO.Date := Date;
    DBDateNASCCONJUGE.Date := Date;
    DBDateBATISMO.Date := Date;
    DBDateVALCARTEIRA.Date := Date;
    DBDateADMISSAO.Date := Date;

    DM.TBL_MEMBROS.Active := false;
    DM.TBL_MEMBROS.Active := true;

    DM.TBL_PROFISSOES.Active := false;
    DM.TBL_PROFISSOES.Active := true;
    carregarcbPROFISSAO;

    DM.TBL_TRATAMENTOS.Active := false;
    DM.TBL_TRATAMENTOS.Active := true;
    CARREGARTRATAMENTO;

    DM.TBL_IGREJAS.Active := false;
    DM.TBL_IGREJAS.Active := true;
    CARREGARIGREJAS;

    DM.TBL_GRUPOS.Active := false;
    DM.TBL_GRUPOS.Active := true;
    CARREGARGRUPOS;

    buscarTudo;
    limparCampos;
    carregarImagemPadrao();
    // Defina o PageIndex do PageControl desejado para a página que você quer que seja exibida
    PageControl1.ActivePageIndex := 1; // Defina o índice da página desejada
    PageControl1.ActivePageIndex := 0; // Defina o índice da página desejada



    BtnSalvar.Enabled     := False;
    btnNovo.Enabled       := True;
    btnDeletar.Enabled    := False;
    btnEditar.Enabled     := True;
    btnCANCELAR.Enabled   := False;
    BtnPesquisar.Enabled  := True;
    btnAdd.Enabled        := False;
    btnFOTOGRAFAR.Enabled := False;

  end;

procedure TFrmCadMembroS.gridCellClick(Column: TColumn);
begin
  DM.TBL_MEMBROS.Edit;
  DM.QueryMembro.Edit;
  btnEditar.Enabled     := true;
  btnDeletar.Enabled    := true;
  btnAdd.Enabled        := true;
  habilitarCampos;
  EditPATHFOTO.Enabled  := false;
  btnCANCELAR.Enabled   := true;
  btnAdd.Enabled        := true;
  btnFOTOGRAFAR.Enabled := true;

  if DM.QueryMembro.FieldByName('NOME').Value <> null then
  DBEditNOME.Text := DM.QueryMembro.FieldByName('NOME').Value;

  if DM.QueryMembro.FieldByName('ENDERECO').Value <> null then
  DBEditENDERECO.Text := DM.QueryMembro.FieldByName('ENDERECO').Value;

  if DM.QueryMembro.FieldByName('NUMERO').Value <> null then
  DBEditNUMERO.Text  := DM.QueryMembro.FieldByName('NUMERO').Value;

  if DM.QueryMembro.FieldByName('BAIRRO').Value <> null then
  DBEditBAIRRO.Text  := DM.QueryMembro.FieldByName('BAIRRO').Value;

  if DM.QueryMembro.FieldByName('CIDADE').Value <> null then
  DBEditCIDADE.Text  := DM.QueryMembro.FieldByName('CIDADE').Value;

  if DM.QueryMembro.FieldByName('ESTADO').Value <> null then
  DBEditESTADO.Text  := DM.QueryMembro.FieldByName('ESTADO').Value;

  if DM.QueryMembro.FieldByName('CEP').Value <> null then
  DBEDITCEP.Text  := DM.QueryMembro.FieldByName('CEP').Value;

  if DM.QueryMembro.FieldByName('COMPLEMENTO').Value <> null then
  DBEditCOMPLEMENTO.Text  := DM.QueryMembro.FieldByName('COMPLEMENTO').Value;

  if DM.QueryMembro.FieldByName('TELPESSOAL').Value <> null then
  DBEditTELPESSOAL.Text  := DM.QueryMembro.FieldByName('TELPESSOAL').Value;

  if DM.QueryMembro.FieldByName('CONTATO1').Value <> null then
  DBEditCONTATO1.Text  := DM.QueryMembro.FieldByName('CONTATO1').Value;

  if DM.QueryMembro.FieldByName('CONTATO2').Value <> null then
  DBEditCONTATO2.Text  := DM.QueryMembro.FieldByName('CONTATO2').Value;

  if DM.QueryMembro.FieldByName('EMAIL').Value <> null then
  DBEditEMAIL.Text  := DM.QueryMembro.FieldByName('EMAIL').Value;

  if DM.QueryMembro.FieldByName('DIZIMISTA').Value <> null then
  DBcbDIZIMISTA.Text  := DM.QueryMembro.FieldByName('DIZIMISTA').Value;

  if DM.QueryMembro.FieldByName('GRUPO').Value <> null then
  DBcbGRUPO.Text  := DM.QueryMembro.FieldByName('GRUPO').Value;

  if DM.QueryMembro.FieldByName('TRATAMENTO').Value <> null then
  DBcbTRATAMENTO.Text  := DM.QueryMembro.FieldByName('TRATAMENTO').Value;

  if DM.QueryMembro.FieldByName('SEXO').Value <> null then
  DBcbSEXO.Text  := DM.QueryMembro.FieldByName('SEXO').Value;

  if DM.QueryMembro.FieldByName('ESTADO_CIVIL').Value <> null then
  DBcbESTCIVIL.Text  := DM.QueryMembro.FieldByName('ESTADO_CIVIL').Value;

  if DM.QueryMembro.FieldByName('MINISTERIO').Value <> null then
  DBcbMINISTERIO.Text  := DM.QueryMembro.FieldByName('MINISTERIO').Value;

  if DM.QueryMembro.FieldByName('PROFISSAO').Value <> null then
  DBcbPROFISSAO.Text  := DM.QueryMembro.FieldByName('PROFISSAO').Value;

  if DM.QueryMembro.FieldByName('GRAU_ESCOLARIDADE').Value <> null then
  DBcbESCOLARIDADE.Text  := DM.QueryMembro.FieldByName('GRAU_ESCOLARIDADE').Value;

  if DM.QueryMembro.FieldByName('BATIZADO').Value <> null then
  DBcbBATIZADO.Text  := DM.QueryMembro.FieldByName('BATIZADO').Value;

  if DM.QueryMembro.FieldByName('RG').Value <> null then
  DBEDITRG.Text  := DM.QueryMembro.FieldByName('RG').Value;

  if DM.QueryMembro.FieldByName('CPF').Value <> null then
  DBEDITCPF.Text  := DM.QueryMembro.FieldByName('CPF').Value;

  if DM.QueryMembro.FieldByName('NOME_PAI').Value <> null then
  DBEditPAI.Text  := DM.QueryMembro.FieldByName('NOME_PAI').Value;

  if DM.QueryMembro.FieldByName('NOME_MAE').Value <> null then
  DBEditMAE.Text  := DM.QueryMembro.FieldByName('NOME_MAE').Value;

  if DM.QueryMembro.FieldByName('DATEBATISMO').Value <> null then
  DBDateBATISMO.Date  := DM.QueryMembro.FieldByName('DATEBATISMO').Value;

  if DM.QueryMembro.FieldByName('DATEADMISSAO').Value <> null then
  DBDateADMISSAO.Date  := DM.QueryMembro.FieldByName('DATEADMISSAO').Value;

  if DM.QueryMembro.FieldByName('PAIS_ORIGEM').Value <> null then
  DBEditPAISORIG.Text  := DM.QueryMembro.FieldByName('PAIS_ORIGEM').Value;

  if DM.QueryMembro.FieldByName('TELEFONE_PAIS_ORIGEM').Value <> null then
  DBEditTELPAISORIG.Text  := DM.QueryMembro.FieldByName('TELEFONE_PAIS_ORIGEM').Value;

  if DM.QueryMembro.FieldByName('DATECASAMENTO').Value <> null then
  DBDateCASAMENTO.Date  := DM.QueryMembro.FieldByName('DATECASAMENTO').Value;

  if DM.QueryMembro.FieldByName('IGREJA_BATISMO').Value <> null then
  DBEditIGREJA_BATISMO.Text  := DM.QueryMembro.FieldByName('IGREJA_BATISMO').Value;

  if DM.QueryMembro.FieldByName('DATECONSAGRA').Value <> null then
  DBDateCONSAGRA.Date  := DM.QueryMembro.FieldByName('DATECONSAGRA').Value;

  if DM.QueryMembro.FieldByName('NATURALIDADE').Value <> null then
  DBEditNATURAL.Text  := DM.QueryMembro.FieldByName('NATURALIDADE').Value;

  if DM.QueryMembro.FieldByName('TITULO_ELEITOR').Value <> null then
  DBEditTITULO.Text  := DM.QueryMembro.FieldByName('TITULO_ELEITOR').Value;

  if DM.QueryMembro.FieldByName('FILHOS').Value <> null then
  DBEditFILHOS.Text  := DM.QueryMembro.FieldByName('FILHOS').Value;

  if DM.QueryMembro.FieldByName('DateVALCARTEIRA').Value <> null then
  DBDateVALCARTEIRA.Date  := DM.QueryMembro.FieldByName('DateVALCARTEIRA').Value;

  if DM.QueryMembro.FieldByName('ROLL').Value <> null then
  DBEditROLL.Text  := DM.QueryMembro.FieldByName('ROLL').Value;

  if DM.QueryMembro.FieldByName('CONJUGE').Value <> null then
  DBEditCONJUGE.Text  := DM.QueryMembro.FieldByName('CONJUGE').Value;

  if DM.QueryMembro.FieldByName('CAMPO13').Value <> null then
  DBEditCAMPO13.Text  := DM.QueryMembro.FieldByName('CAMPO13').Value;

  if DM.QueryMembro.FieldByName('TIPO_MORADIA').Value <> null then
  DBcbMORADIA.Text  := DM.QueryMembro.FieldByName('TIPO_MORADIA').Value;

  if DM.QueryMembro.FieldByName('CAMPO15').Value <> null then
  DBEditCAMPO15.Text  := DM.QueryMembro.FieldByName('CAMPO15').Value;

  if DM.QueryMembro.FieldByName('HISTORICO').Value <> null then
  DBMemoHistórico.Text  := DM.QueryMembro.FieldByName('HISTORICO').Value;

  if DM.QueryMembro.FieldByName('DateNASCCONJUGE').Value <> null then
  DBDateNASCCONJUGE.Date  := DM.QueryMembro.FieldByName('DateNASCCONJUGE').Value;

  if DM.QueryMembro.FieldByName('CIDADE_BATISMO').Value <> null then
  DBEditCIDADEBATISMO.Text  := DM.QueryMembro.FieldByName('CIDADE_BATISMO').Value;

  if DM.QueryMembro.FieldByName('DATA_NASC').Value <> null then
 DBDateNASC .Date  := DM.QueryMembro.FieldByName('DATA_NASC').Value;

  if DM.QueryMembro.FieldByName('OBSERVACAO').Value <> null then
  DBMemoOBSERVACAO.Text  := DM.QueryMembro.FieldByName('OBSERVACAO').Value;

  if DM.QueryMembro.FieldByName('id').Value <> null then
  DBeditid.Text := DM.QueryMembro.FieldByName('ID').Value;

  editpathfoto.Text:=DM.QueryMembro.FieldByName('imagem').asstring;

  {Recupera a foto na navegação dbgrid}
  imgProfile.Picture.Assign(nil);
  If DM.QueryMembro.FieldByName('imagem').asstring <> '' then
  begin
    if fileexists(DM.QueryMembro.FieldByName('imagem').asstring) then
    imgProfile.Picture.LoadFromFile(DM.QueryMembro.FieldByName('imagem').AsString);
  end;
end;

procedure TFrmCadMembroS.gridDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  with grid do
  begin
    if Odd( DM.DSMembro.DataSet.RecNo) then
    //Canvas.Brush.Color := clSilver
      Canvas.Brush.Color := clWindow
    else
    Canvas.Brush.Color := clGradientActiveCaption;
     // Canvas.Brush.Color := clMoneyGreen;

    Canvas.FillRect(Rect);
    DefaultDrawColumnCell(Rect,DataCol,Column,State);
  end;
end;

procedure TFrmCadMembroS.habilitarCampos;
begin
  limparCampos;
  DBEditNOME        .Enabled := True;
  DBEditENDERECO    .Enabled := True;
  DBEditNUMERO      .Enabled := True;
  DBEditBAIRRO      .Enabled := True;
  DBEditCIDADE      .Enabled := True;
  DBEditESTADO      .Enabled := True;
  DBEDITCEP         .Enabled := True;
  DBEditCOMPLEMENTO .Enabled := True;
  DBEditTELPESSOAL  .Enabled := True;
  DBEditCONTATO1    .Enabled := True;
  DBEditCONTATO2    .Enabled := True;
  DBEditEMAIL       .Enabled := True;
  DBcbDIZIMISTA     .Enabled := True;
  DBcbGRUPO         .Enabled := True;
  DBcbTRATAMENTO    .Enabled := True;
  DBcbSEXO          .Enabled := True;
  DBcbESTCIVIL      .Enabled := True;
  DBcbMINISTERIO    .Enabled := True;
  DBcbESCOLARIDADE  .Enabled := True;
  DBcbBATIZADO      .Enabled := True;
  DBEDITRG          .Enabled := True;
  DBEDITCPF         .Enabled := True;
  DBEditPAI         .Enabled := True;
  DBEditMAE         .Enabled := True;
  DBDateBATISMO     .Enabled := True;
  DBDateADMISSAO    .Enabled := True;
  DBEditPAISORIG    .Enabled := True;
  DBEditTELPAISORIG .Enabled := True;
  DBDateCASAMENTO   .Enabled := True;
  CheckATIVO        .Enabled := True;
  DBEditIGREJA_BATISMO.Enabled := True;
  DBDateCONSAGRA    .Enabled := True;
  DBEditNATURAL     .Enabled := True;
  DBEditTITULO      .Enabled := True;
  DBEditFILHOS      .Enabled := True;
  DBDateVALCARTEIRA .Enabled := True;
  DBEditROLL        .Enabled := True;
  DBEditCONJUGE     .Enabled := True;
  DBEditCAMPO13     .Enabled := True;
  DBcbMORADIA       .Enabled := True;
  DBEditCAMPO15     .Enabled := True;
  DBMemoHistórico   .Enabled := True;
  DBcbPROFISSAO     .Enabled := True;
  DBDateNASCCONJUGE .Enabled := True;
  DBEditCIDADEBATISMO.Enabled := True;
  DBDateNASC        .Enabled := True;
  DBMemoOBSERVACAO  .Enabled := True;

end;

procedure TFrmCadMembroS.limparCampos;
begin
  DBEditNOME         .Text  := '';
  DBEditENDERECO     .Text  := '';
  DBEditNUMERO       .Text  := '';
  DBEditBAIRRO       .Text  := '';
  DBEditCIDADE       .Text  := '';
  DBEditESTADO       .Text  := '';
  DBEDITCEP          .Text  := '';
  DBEditCOMPLEMENTO  .Text  := '';
  DBEditTELPESSOAL   .Text  := '';
  DBEditCONTATO1     .Text  := '';
  DBEditCONTATO2     .Text  := '';
  DBEditEMAIL        .Text  := '';
  DBcbDIZIMISTA      .Text  := '';
  DBcbGRUPO          .Text  := '';
  DBcbTRATAMENTO     .Text  := '';
  DBcbSEXO           .Text  := '';
  DBcbESTCIVIL       .Text  := '';
  DBcbMINISTERIO     .Text  := '';
  DBcbPROFISSAO      .Text  := '';
  DBcbESCOLARIDADE   .Text  := '';
  DBcbBATIZADO       .Text  := '';
  DBEDITRG           .Text  := '';
  DBEDITCPF          .Text  := '';
  DBEditPAI          .Text  := '';
  DBEditMAE          .Text  := '';
  DBEditPAISORIG     .Text  := '';
  DBEditTELPAISORIG  .Text  := '';
  DBEditIGREJA_BATISMO.Text := '';
  DBEditNATURAL      .Text := '';
  DBEditTITULO       .Text := '';
  DBEditFILHOS       .Text := '';
  DBEditROLL         .Text := '';
  DBEditCONJUGE      .Text := '';
  DBEditCAMPO13      .Text := '';
  DBcbMORADIA        .Text := '';
  DBEditCAMPO15      .Text := '';
  DBMemoHistórico    .Text := '';
  DBEditCIDADEBATISMO.Text := '';
  DBMemoOBSERVACAO   .Text := '';
end;

procedure TFrmCadMembroS.btnCartasClick(Sender: TObject);
begin
// Faz a consulta do membro para enviar para o relatorio
  DM.QueryMembro.Close;
  DM.QueryMembro.SQL.Clear;
  DM.QueryMembro.SQL.Add('select * from TBL_MEMBROS where id = :id'); // passa o parametro ID
  DM.QueryMembro.ParamByName('ID').Value := DBeditid.Text;       // Recupera o parametro ID para o Edit
  DM.QueryMembro.Open();


  DM.RelCarteira.LoadFromFile(GetCurrentDir + '\Relatorio\RelCarteirinha.fr3');
  DM.RelCarteira.ShowReport();
  buscarTudo; // Após chamar o relatorio, executa a procedure BuscarTudo
end;

function TFrmCadMembroS.ApplicationPath: String;
begin
  {$IfDef ANDROID}
  Result := PathWithDelim(TPath.GetHomePath);
  {$Else}
  Result := PathWithDelim(ExtractFilePath(ParamStr(0)));
  {$EndIf}
end;


function TFrmCadMembroS.PathWithDelim(const APath : String) : String ;
begin
  Result := Trim(APath) ;
  if Result <> '' then
  begin
     {$IfDef FPC}
      Result := IncludeTrailingPathDelimiter(Result);
     {$Else}
      if RightStr(Result,1) <> PathDelim then   { Tem delimitador no final ? }
         Result := Result + PathDelim ;
     {$EndIf}
  end;
end ;


function TFrmCadMembroS.RightStr(const AText: AnsiString; const ACount: Integer): AnsiString;
  begin
    Result := Copy(AText, Length(AText) + 1 - ACount, ACount);
  end;
end.
